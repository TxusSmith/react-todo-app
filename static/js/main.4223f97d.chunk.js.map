{"version":3,"sources":["constants/sort.js","store/AppContext.jsx","components/TaskItem/TaskItem.jsx","components/TasksList/TasksList.jsx","components/TaskForm/TaskForm.jsx","components/TasksSorter/TasksSorter.jsx","components/TasksContainer/TasksContainer.jsx","App.jsx","index.js"],"names":["SORT_TYPE_ASC","SORT_TYPE_DESC","sortLabels","AppContext","React","createContext","AppContextWrapper","props","useState","tasks","setTasks","state","setTaskStatus","id","status","tasksUpdated","map","task","completed","saveTask","title","newTask","uuid","userId","newTasks","sortTasks","sortType","tasksCopy","sort","a","b","setTaskTitle","newTitle","deleteTask","taskId","taskArr","filter","Provider","value","displayName","children","TaskItem","useContext","isUpdating","setIsUpdating","text","setText","Card","className","Checkbox","checked","onChange","event","target","handleCheck","TextField","label","IconButton","color","onClick","disabled","length","TasksList","TaskForm","onSubmit","preventDefault","required","Button","type","startIcon","TasksSorter","setSortType","Select","itemSelected","sortLabel","MenuItem","TasksContainer","loadTasks","axios","get","response","data","slice","console","log","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4223f97d.chunk.js","sourcesContent":["export const SORT_TYPE_ASC = \"Ascendente\";\r\nexport const SORT_TYPE_DESC = \"Descendente\";\r\nexport const sortLabels = [SORT_TYPE_ASC, SORT_TYPE_DESC];\r\n","import React, { useState } from \"react\";\r\nimport * as uuid from \"uuid\";\r\nimport { SORT_TYPE_ASC, SORT_TYPE_DESC } from \"../constants/sort\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport const AppContextWrapper = (props) => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const setTaskStatus = (id, status) => {\r\n    const tasksUpdated = tasks.map((task) => {\r\n      if (task.id === id) {\r\n        return {\r\n          ...task,\r\n          completed: status,\r\n        };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(tasksUpdated);\r\n  };\r\n\r\n  const setTaskTitle = (id, newTitle) => {\r\n    const tasksUpdated = tasks.map((task) => {\r\n      if (task.id === id) {\r\n        return {\r\n          ...task,\r\n          title: newTitle,\r\n        };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(tasksUpdated);\r\n  };\r\n\r\n  const saveTask = (title) => {\r\n    const newTask = {\r\n      id: uuid.v1(),\r\n      completed: false,\r\n      userId: uuid.v1(),\r\n      title,\r\n    };\r\n    const newTasks = [...tasks, newTask];\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const sortTasks = (sortType) => {\r\n    const tasksCopy = tasks.map((task) => task);\r\n    if (sortType === SORT_TYPE_ASC) {\r\n      tasksCopy.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n    } else if (sortType === SORT_TYPE_DESC) {\r\n      tasksCopy.sort((a, b) => (a.title < b.title ? 1 : -1));\r\n    }\r\n    setTasks(tasksCopy);\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    const taskArr = tasks.filter((task) => task.id !== taskId);\r\n    setTasks(taskArr);\r\n  };\r\n\r\n  const state = {\r\n    tasks,\r\n    setTasks,\r\n    setTaskStatus,\r\n    saveTask,\r\n    sortTasks,\r\n    setTaskTitle,\r\n    deleteTask,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={state} displayName=\"AppContext\">\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\nexport default AppContext;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./TaskItem.scss\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst TaskItem = ({ id, completed, title }) => {\r\n  const state = useContext(AppContext);\r\n\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [text, setText] = useState(title);\r\n\r\n  const handleCheck = (event) => {\r\n    const status = event.target.checked;\r\n    state.setTaskStatus(id, status);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    setIsUpdating(false);\r\n    state.setTaskTitle(id, text);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"taskItem\">\r\n      <div className=\"taskItem__checkbox\">\r\n        <Checkbox\r\n          checked={completed}\r\n          onChange={(event) => handleCheck(event)}\r\n        />\r\n      </div>\r\n      <div className=\"taskItem__input\">\r\n        {isUpdating ? (\r\n          <TextField\r\n            className=\"taskItem__input\"\r\n            label=\"Tarea...\"\r\n            value={text}\r\n            onChange={(event) => setText(event.target.value)}\r\n          />\r\n        ) : (\r\n          <p>{text}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"taskItem__buttons\">\r\n        {isUpdating ? (\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={handleUpdate}\r\n            disabled={!text.length}\r\n          >\r\n            <SaveIcon />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton color=\"primary\" onClick={() => setIsUpdating(true)}>\r\n            <CreateIcon />\r\n          </IconButton>\r\n        )}\r\n\r\n        <IconButton color=\"secondary\" onClick={() => state.deleteTask(id)}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React, { useContext } from \"react\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport TaskItem from \"../TaskItem/TaskItem\";\r\nimport \"./TasksList.scss\";\r\n\r\nconst TasksList = () => {\r\n  const state = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"tasksList\">\r\n      {state.tasks.map((task) => (\r\n        <TaskItem\r\n          key={task.id}\r\n          id={task.id}\r\n          completed={task.completed}\r\n          title={task.title}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./TaskForm.scss\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst TaskForm = () => {\r\n  const state = useContext(AppContext);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    state.saveTask(text);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSubmit}>\r\n      <TextField\r\n        className=\"taskForm__input\"\r\n        required={true}\r\n        value={text}\r\n        onChange={(event) => setText(event.target.value)}\r\n        label=\"Agrega un titulo a la tarea\"\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        color=\"primary\"\r\n        startIcon={<SaveIcon />}\r\n        disabled={!text.length}\r\n      >\r\n        Guardar\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./TasksSorter.scss\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport { sortLabels } from \"../../constants/sort\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst TasksSorter = () => {\r\n  const state = useContext(AppContext);\r\n\r\n  const [sortType, setSortType] = useState(sortLabels[0]);\r\n\r\n  const handleSelect = (event) => {\r\n    const itemSelected = event.target.value;\r\n    setSortType(itemSelected);\r\n    state.sortTasks(itemSelected);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasksSorter\">\r\n      <Select value={sortType} onChange={handleSelect}>\r\n        {sortLabels.map((sortLabel) => (\r\n          <MenuItem key={sortLabel} value={sortLabel}>\r\n            {sortLabel}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksSorter;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport TasksList from \"../TasksList/TasksList\";\r\nimport \"./TasksContainer.scss\";\r\nimport TaskForm from \"../TaskForm/TaskForm\";\r\nimport TasksSorter from \"../TasksSorter/TasksSorter\";\r\n\r\nconst TasksContainer = () => {\r\n  const state = useContext(AppContext);\r\n  const loadTasks = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://jsonplaceholder.typicode.com/todos\"\r\n      );\r\n      const tasks = response.data.slice(0, 5);\r\n      console.log(tasks);\r\n      state.setTasks(tasks);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tasksContainer\">\r\n      <TaskForm />\r\n      <TasksSorter />\r\n      <TasksList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksContainer;\r\n","import React from \"react\";\r\nimport TasksContainer from \"./components/TasksContainer/TasksContainer\";\r\nimport { AppContextWrapper } from \"./store/AppContext\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppContextWrapper>\r\n      <TasksContainer />\r\n    </AppContextWrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}